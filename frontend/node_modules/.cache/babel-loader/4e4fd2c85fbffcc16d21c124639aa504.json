{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proshop\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { usEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartScreen, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Proshop/frontend/src/screens/CartScreen.js"],"names":["React","usEffect","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","useEffect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,SAAlB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,MAA1C,EAAkDC,IAAlD,QAA6D,iBAA7D;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,QAAyB,wBAAzB;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AAAA;;AACtD,QAAMC,SAAS,GAAEH,KAAK,CAACI,MAAN,CAAaC,EAA9B;AACA,QAAMC,GAAG,GAAEL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAACP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAAyD,CAApE;AACA,QAAMC,QAAQ,GAAEtB,WAAW,EAA3B;AAEAuB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGR,SAAH,EAAa;AACTO,MAAAA,QAAQ,CAACZ,SAAS,CAACK,SAAD,EAAYG,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIN,CAACI,QAAD,EAAWP,SAAX,EAAsBG,GAAtB,CAJM,CAAT;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBM;;GAAMP,U;UAGOX,W;;;KAHPW,U;AAkBb,eAAeA,UAAf","sourcesContent":["import React, {usEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart} from '../actions/cartActions'\r\n\r\nexport const CartScreen = ({match, location, history}) => {\r\n    const productId= match.params.id\r\n    const qty= location.search ? Number(location.search.split('=')[1]) :1\r\n    const dispatch =useDispatch()\r\n\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    return (\r\n        <div>\r\n            Cart\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen"]},"metadata":{},"sourceType":"module"}