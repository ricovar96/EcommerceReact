{"ast":null,"code":"import _slicedToArray from\"C:/Proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import FormContainer from'../components/FormContainer';import{getUserDetails,updateUser}from'../actions/userActions';import{USER_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var UserEditScreen=function UserEditScreen(_ref){var match=_ref.match,history=_ref.history;var userId=match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,errorUpdate=userUpdate.error,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userlist');}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[dispatch,history,userId,user,successUpdate]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:userId,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",className:\"btn btn-light my-3\",children:\"Go back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});};export default UserEditScreen;","map":{"version":3,"sources":["C:/Proshop/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","type","push","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nexport const UserEditScreen = ({match, history}) => {\r\n    const userId= match.params.id\r\n    const [name, setName]= useState('')\r\n    const [email, setEmail]= useState('')\r\n    const [isAdmin, setIsAdmin]= useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state=> state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state=> state.userUpdate)\r\n    const {loading: loadingUpdate, error: errorUpdate, success:successUpdate} = userUpdate\r\n    \r\n    useEffect(()=>{\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n        if(!user.name || user._id !== userId){\r\n            dispatch(getUserDetails(userId))\r\n        }else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setIsAdmin(user.isAdmin)\r\n        }\r\n        }\r\n    }, [dispatch, history, userId, user,successUpdate])\r\n\r\n    const submitHandler= (e) =>{\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: userId, name, email, isAdmin}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>:(\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) =>setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) =>setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check\r\n                        type='checkbox'\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) =>setIsAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            )}\r\n            \r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen"]},"metadata":{},"sourceType":"module"}