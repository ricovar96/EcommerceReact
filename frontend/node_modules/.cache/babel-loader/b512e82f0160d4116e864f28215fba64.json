{"ast":null,"code":"import _slicedToArray from\"C:/Proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');}var _useState=useState('Paypal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var SubmitHandler=function SubmitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:SubmitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Paypal or Credit Card\",name:\"paymentMethod\",value:\"Paypal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["C:/Proshop/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","dispatch","SubmitHandler","e","preventDefault","target","value"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,IAAR,CAAcC,MAAd,CAAuBC,GAAvB,KAAiC,iBAAjC,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAe,IAAbC,CAAAA,OAAa,MAAbA,OAAa,CAEjC,GAAMC,CAAAA,IAAI,CAAEN,WAAW,CAAC,SAAAO,KAAK,QAAEA,CAAAA,KAAK,CAACD,IAAR,EAAN,CAAvB,CAFiC,GAG1BE,CAAAA,eAH0B,CAGTF,IAHS,CAG1BE,eAH0B,CAKjC,GAAG,CAACA,eAAJ,CAAoB,CAChBH,OAAO,CAACI,IAAR,CAAa,WAAb,EACH,CAPgC,cASQd,QAAQ,CAAC,QAAD,CAThB,wCAS1Be,aAT0B,eASXC,gBATW,eAWjC,GAAMC,CAAAA,QAAQ,CAAEb,WAAW,EAA3B,CAEA,GAAMc,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,CAACC,CAAD,CAAM,CACtBA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACT,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CACAL,OAAO,CAACI,IAAR,CAAa,aAAb,EACH,CAJD,CAMA,mBACI,MAAC,aAAD,yBACI,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADJ,cAEI,sCAFJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAKA,KAAC,GAAD,wBACI,KAAC,IAAD,CAAM,KAAN,EACA,IAAI,CAAC,OADL,CAEA,KAAK,CAAC,uBAFN,CAGA,IAAI,CAAC,eAHL,CAIA,KAAK,CAAC,QAJN,CAKA,OAAO,KALP,CAMA,QAAQ,CAAE,kBAACC,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EANV,EADJ,EALA,GADJ,cA0BI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBA1BJ,GAHJ,GADJ,CAoCH,CAvDD,CAyDA,cAAeb,CAAAA,aAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport {Form, Button,  Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({history}) => {\r\n\r\n    const cart= useSelector(state=>state.cart)\r\n    const {shippingAddress}=cart\r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod]= useState('Paypal')\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const SubmitHandler=(e) =>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={SubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>\r\n                        Select Method\r\n                    </Form.Label>\r\n\r\n                <Col>\r\n                    <Form.Check \r\n                    type='radio' \r\n                    label='Paypal or Credit Card' \r\n                    name='paymentMethod' \r\n                    value='Paypal' \r\n                    checked \r\n                    onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                    {/* <Form.Check \r\n                    type='radio' \r\n                    label='Stripe'\r\n                    id='Stripe' \r\n                    name='paymentMethod' \r\n                    value='Stripe' \r\n                    checked \r\n                    onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check> */}\r\n                </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n"]},"metadata":{},"sourceType":"module"}