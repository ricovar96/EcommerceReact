{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { CartReducer } from './reducers/cartReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: CartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Proshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","CartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,EAA4BC,qBAA5B,QAAwD,4BAAxD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,OAAO,GAAEP,eAAe,CAAC;AAC3BQ,EAAAA,WAAW,EAAEJ,kBADc;AAE3BK,EAAAA,cAAc,EAAEJ,qBAFW;AAG3BK,EAAAA,IAAI,EAAEJ;AAHqB,CAAD,CAA9B;AAMA,MAAMK,oBAAoB,GAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAhH;AAEA,MAAMG,YAAY,GAAC;AACfN,EAAAA,IAAI,EAAE;AAAEO,IAAAA,SAAS,EAAEN;AAAb;AADS,CAAnB;AAIA,MAAMO,UAAU,GAAC,CAAChB,KAAD,CAAjB;AAEA,MAAMiB,KAAK,GAAEpB,WAAW,CAACQ,OAAD,EAAUS,YAAV,EAAwBb,mBAAmB,CAC9DF,eAAe,CAAC,GAAGiB,UAAJ,CAD+C,CAA3C,CAAxB;AAGA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {productListReducer, productDetailsReducer} from './reducers/productReducers'\r\nimport { CartReducer } from './reducers/cartReducer'\r\n\r\nconst reducer= combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: CartReducer\r\n})\r\n\r\nconst cartItemsFromStorage= localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst initialState={\r\n    cart: { cartItems: cartItemsFromStorage }\r\n}\r\n\r\nconst middleware=[thunk]\r\n\r\nconst store= createStore(reducer, initialState, composeWithDevTools\r\n    (applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}