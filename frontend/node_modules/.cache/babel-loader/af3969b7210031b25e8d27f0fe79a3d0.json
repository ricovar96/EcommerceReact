{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Proshop/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) =>{\r\n    try{\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        }=getState()\r\n\r\n        const config ={\r\n            headers:{\r\n                'Content-Type' : 'application/json' ,\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.post(`/api/orders`, order, config)\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) =>{\r\n    try{\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        }=getState()\r\n\r\n        const config ={\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const {data} = await axios.get(`/api/orders/${id}`,  config)\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        }=getState()\r\n\r\n        const config ={\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`,  paymentResult, config)\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = (orderId, paymentResult) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        }=getState()\r\n\r\n        const config ={\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders`,  config)\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = (orderId, paymentResult) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        }=getState()\r\n\r\n        const config ={\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/orders`,  config)\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}